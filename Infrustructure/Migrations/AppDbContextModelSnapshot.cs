// <auto-generated />
using System;
using Infrustructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrustructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CheckinAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckoutAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("GuestId")
                        .IsUnique();

                    b.HasIndex("RoomId")
                        .IsUnique();

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CheckinAt = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckoutAt = new DateTime(2024, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 1,
                            GuestId = 1,
                            Price = 500m,
                            RoomId = 1
                        },
                        new
                        {
                            Id = 2,
                            CheckinAt = new DateTime(2024, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckoutAt = new DateTime(2024, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 1,
                            GuestId = 2,
                            Price = 750m,
                            RoomId = 2
                        },
                        new
                        {
                            Id = 3,
                            CheckinAt = new DateTime(2024, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckoutAt = new DateTime(2024, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 1,
                            GuestId = 3,
                            Price = 600m,
                            RoomId = 3
                        },
                        new
                        {
                            Id = 4,
                            CheckinAt = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckoutAt = new DateTime(2024, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 5,
                            GuestId = 4,
                            Price = 1000m,
                            RoomId = 9
                        },
                        new
                        {
                            Id = 5,
                            CheckinAt = new DateTime(2024, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckoutAt = new DateTime(2024, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 3,
                            GuestId = 5,
                            Price = 900m,
                            RoomId = 5
                        },
                        new
                        {
                            Id = 6,
                            CheckinAt = new DateTime(2024, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckoutAt = new DateTime(2024, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 3,
                            GuestId = 6,
                            Price = 300m,
                            RoomId = 6
                        });
                });

            modelBuilder.Entity("Domain.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1980, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.doe@grandpalace.com",
                            FirstName = "John",
                            HotelId = 1,
                            LastName = "Doe",
                            StartedDate = new DateTime(2010, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Receptionist"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1992, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.smith@oceanview.com",
                            FirstName = "Jane",
                            HotelId = 1,
                            LastName = "Smith",
                            StartedDate = new DateTime(2018, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Concierge"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1985, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emily.johnson@mountain.com",
                            FirstName = "Emily",
                            HotelId = 2,
                            LastName = "Johnson",
                            StartedDate = new DateTime(2015, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Receptionist"
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(1978, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "michael.brown@citycentral.com",
                            FirstName = "Michael",
                            HotelId = 2,
                            LastName = "Brown",
                            StartedDate = new DateTime(2012, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Concierge"
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(1990, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sarah.davis@riverside.com",
                            FirstName = "Sarah",
                            HotelId = 3,
                            LastName = "Davis",
                            StartedDate = new DateTime(2017, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Receptionist"
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateTime(1983, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "robert.wilson@sunset.com",
                            FirstName = "Robert",
                            HotelId = 3,
                            LastName = "Wilson",
                            StartedDate = new DateTime(2011, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Concierge"
                        });
                });

            modelBuilder.Entity("Domain.Models.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Guests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1990, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alice.williams@mail.com",
                            FirstName = "Alice",
                            LastName = "Williams",
                            Phone = "555-2233"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1985, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bob.miller@mail.com",
                            FirstName = "Bob",
                            LastName = "Miller",
                            Phone = "555-4455"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1978, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "charlie.davis@mail.com",
                            FirstName = "Charlie",
                            LastName = "Davis",
                            Phone = "555-6677"
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(1988, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "donna.wilson@mail.com",
                            FirstName = "Donna",
                            LastName = "Wilson",
                            Phone = "555-8899"
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(1995, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "edward.moore@mail.com",
                            FirstName = "Edward",
                            LastName = "Moore",
                            Phone = "555-1122"
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1954),
                            Email = "fiona.clark@mail.com",
                            FirstName = "Fiona",
                            LastName = "Clark",
                            Phone = "555-2234"
                        },
                        new
                        {
                            Id = 7,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1960),
                            Email = "george.hall@mail.com",
                            FirstName = "George",
                            LastName = "Hall",
                            Phone = "555-4456"
                        },
                        new
                        {
                            Id = 8,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1961),
                            Email = "hannah.lewis@mail.com",
                            FirstName = "Hannah",
                            LastName = "Lewis",
                            Phone = "555-6678"
                        },
                        new
                        {
                            Id = 9,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1970),
                            Email = "ian.walker@mail.com",
                            FirstName = "Ian",
                            LastName = "Walker",
                            Phone = "555-8890"
                        },
                        new
                        {
                            Id = 10,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1973),
                            Email = "jane.harris@mail.com",
                            FirstName = "Jane",
                            LastName = "Harris",
                            Phone = "555-1123"
                        });
                });

            modelBuilder.Entity("Domain.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Palace Road, Cityville",
                            Email = "info@grandpalace.com",
                            Name = "Grand Palace Hotel",
                            Phone = "555-1234"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Beach Blvd, Seaside Town",
                            Email = "contact@oceanviewresort.com",
                            Name = "Oceanview Resort",
                            Phone = "555-5678"
                        },
                        new
                        {
                            Id = 3,
                            Address = "101 Center Plaza, Metropolis",
                            Email = "hello@citycentralinn.com",
                            Name = "City Central Inn",
                            Phone = "555-1122"
                        });
                });

            modelBuilder.Entity("Domain.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookingId = 1,
                            CreatedDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 500m
                        },
                        new
                        {
                            Id = 2,
                            BookingId = 2,
                            CreatedDate = new DateTime(2024, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 500m
                        },
                        new
                        {
                            Id = 3,
                            BookingId = 3,
                            CreatedDate = new DateTime(2024, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 600m
                        },
                        new
                        {
                            Id = 4,
                            BookingId = 4,
                            CreatedDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 600m
                        },
                        new
                        {
                            Id = 5,
                            BookingId = 4,
                            CreatedDate = new DateTime(2024, 7, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 200m
                        },
                        new
                        {
                            Id = 6,
                            BookingId = 5,
                            CreatedDate = new DateTime(2024, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 600m
                        },
                        new
                        {
                            Id = 7,
                            BookingId = 5,
                            CreatedDate = new DateTime(2024, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 300m
                        },
                        new
                        {
                            Id = 8,
                            BookingId = 6,
                            CreatedDate = new DateTime(2024, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalAmount = 300m
                        });
                });

            modelBuilder.Entity("Domain.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FloorNumber = 1,
                            HotelId = 1,
                            Number = 101,
                            RoomTypeId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            FloorNumber = 2,
                            HotelId = 1,
                            Number = 202,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            FloorNumber = 1,
                            HotelId = 1,
                            Number = 303,
                            RoomTypeId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            FloorNumber = 3,
                            HotelId = 1,
                            Number = 404,
                            RoomTypeId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            FloorNumber = 2,
                            HotelId = 2,
                            Number = 505,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            FloorNumber = 1,
                            HotelId = 2,
                            Number = 106,
                            RoomTypeId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 7,
                            FloorNumber = 2,
                            HotelId = 2,
                            Number = 207,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            FloorNumber = 4,
                            HotelId = 2,
                            Number = 308,
                            RoomTypeId = 4,
                            Status = 3
                        },
                        new
                        {
                            Id = 9,
                            FloorNumber = 4,
                            HotelId = 3,
                            Number = 409,
                            RoomTypeId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 10,
                            FloorNumber = 1,
                            HotelId = 3,
                            Number = 510,
                            RoomTypeId = 1,
                            Status = 2
                        },
                        new
                        {
                            Id = 11,
                            FloorNumber = 3,
                            HotelId = 3,
                            Number = 107,
                            RoomTypeId = 1,
                            Status = 2
                        },
                        new
                        {
                            Id = 12,
                            FloorNumber = 3,
                            HotelId = 3,
                            Number = 302,
                            RoomTypeId = 3,
                            Status = 2
                        });
                });

            modelBuilder.Entity("Domain.Models.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("NumOfBeds")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NumOfBeds = 1,
                            TypeName = "Single"
                        },
                        new
                        {
                            Id = 2,
                            NumOfBeds = 2,
                            TypeName = "Double"
                        },
                        new
                        {
                            Id = 3,
                            NumOfBeds = 4,
                            TypeName = "Family"
                        },
                        new
                        {
                            Id = 4,
                            NumOfBeds = 3,
                            TypeName = "Deluxe"
                        });
                });

            modelBuilder.Entity("Domain.Models.Booking", b =>
                {
                    b.HasOne("Domain.Models.Employee", null)
                        .WithMany("Bookings")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Guest", null)
                        .WithOne()
                        .HasForeignKey("Domain.Models.Booking", "GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Room", null)
                        .WithOne()
                        .HasForeignKey("Domain.Models.Booking", "RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.Employee", b =>
                {
                    b.HasOne("Domain.Models.Hotel", null)
                        .WithMany("Employees")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.Payment", b =>
                {
                    b.HasOne("Domain.Models.Booking", null)
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.Room", b =>
                {
                    b.HasOne("Domain.Models.Hotel", null)
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.RoomType", null)
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.Booking", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Domain.Models.Employee", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Domain.Models.Hotel", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Domain.Models.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
